classdef (Abstract) Plots


methods (Static, Access=private)


function fig_handle = box ( all_quantiles, labels, x_label, x_axis, fig_size )
	% Transform quantiles [0, 0.25, 0.5, 0.75, 1] to a vector usable by "boxplot".
	% The trick to be able to use boxplot is to add the median once.
	plotable_quantiles = cellfun ...
		( @(quantiles) [ quantiles(:); quantiles(3) ] ...
		, all_quantiles ...
		, 'UniformOutput', false ...
		);
	fig_handle = figure;
	set( fig_handle, 'Visible', 'off' );
	boxplot ...
		( cell2mat( plotable_quantiles ) ...
		, labels ...
		, 'Orientation', 'horizontal' ...
		, 'PlotStyle', 'compact' ...
		, 'Whisker', inf ...
		);
	nb_lines = length( labels );
	y_axis = [ 0, nb_lines + 1 ];
	axis( [ x_axis, y_axis ] );
	xlabel( x_label, 'FontSize', 12 );
	set( gcf, 'units', 'points', 'position', [0, 0, fig_size] );
	pbaspect( [20, nb_lines + 1, 1] );
end


function savePdf ( fig_handle, file_path )
	pos = get( fig_handle, 'Position' );
	set( fig_handle ...
		, 'PaperPositionMode', 'Auto' ...
		, 'PaperUnits', 'points' ...
		, 'PaperSize', pos(3:4) ...
		);
	print( fig_handle, file_path, '-dpdf', '-r0' );
end


end % private methods


methods (Static)


function duration( users, file_path )
% Plot Figure 10.
% users must be an horizontal cell array. { user1, ..., usern }.
	durations_rectangle = cellfun ...
		( @(user) User.Log.Time.allSelections( user.log.study.rectangle ) ...
		, users ...
		, 'UniformOutput', false ...
		);
	durations_outline = cellfun ...
		( @(user) User.Log.Time.allSelections( user.log.study.outline ) ...
		, users ...
		, 'UniformOutput', false ...
		);
	durations_scribbles = cellfun ...
		( @(user) User.Log.Time.allScribbles( user.log.study.scribbles ) ...
		, users ...
		, 'UniformOutput', false ...
		);
	quantiles = cellfun ...
		( @(durations) quantile( cell2mat( durations ), linspace( 0, 1, 5 ) ) ...
		, { durations_rectangle, durations_outline, durations_scribbles } ...
		, 'UniformOutput', false ...
		);
	labels = { 'Bounding box', 'Outline', 'Scribbles' };
	x_label = 'Duration of interaction type in seconds (lower is better)';
	x_axis = [ 0, 20 ];
	fig_size = [ 600, 200 ];
	fig_handle = Paper.Plots.box( quantiles, labels, x_label, x_axis, fig_size );
	Paper.Plots.savePdf( fig_handle, file_path );
end


end % methods


end
